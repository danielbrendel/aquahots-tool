# Heroes of the Storms Hotkey Manager main script file

hideconsole;

require "array";
require "auto";
require "fileio";
require "forms";
require "strings";

const WND_CLASS string <= "Heroes of the Storm";
const CONFIG_NAME string <= "messages.txt";
const FORM_TEXT string <= "HotS Chat Hotkey Manager";
const KEY_CODE_1 int <= 116; #F5
const KEY_CODE_2 int <= 117; #F6
const KEY_CODE_3 int <= 118; #F7
const KEY_CODE_4 int <= 119; #F8
const KEY_CODE_5 int <= 120; #F9
const CONFIG_TOGGLE_SECTION_START int <= 4;

global bres bool;
global brun bool;
global currentpath string;
global configpath string;
global keytoggle1 bool;
global keytoggle2 bool;
global keytoggle3 bool;
global keytoggle4 bool;
global keytoggle5 bool;
global switchcount int;
global switchmsg string;
global wndcurrentstatus bool;
global lasttimeactive bool;

set bres <= false;
set brun <= true;
set currentpath <= "";
set configpath <= "";
set keytoggle1 <= false;
set keytoggle2 <= false;
set keytoggle3 <= false;
set keytoggle4 <= false;
set keytoggle5 <= false;
set switchcount <= %CONFIG_TOGGLE_SECTION_START;
set switchmsg <= "";
set lasttimeactive <= true;

array arrConfigItems string 0 ();

getscriptpath currentpath;

set configpath <= {%currentpath..\config\%CONFIG_NAME};

function cbHotKeyToggles_OnSelect void(selectedItem string)
{
};

function btnSaveMessages_OnClick void()
{
    local currentitem string;
	local checkexists bool;
	local hfile int;
	local fopres  bool;

    wnd_gettextboxtext frmMain txtMsg1 currentitem;
    array_item_set "currentitem" arrConfigItems 0;

    wnd_gettextboxtext frmMain txtMsg2 currentitem;
    array_item_set "currentitem" arrConfigItems 1;

    wnd_gettextboxtext frmMain txtMsg3 currentitem;
    array_item_set "currentitem" arrConfigItems 2;

    wnd_gettextboxtext frmMain txtMsg4 currentitem;
    array_item_set "currentitem" arrConfigItems 3;

	set checkexists <= true;

	fexists "%configpath" checkexists;
	if (%checkexists, -eq, true) {
		fremove "%configpath" fopres;
	};
	
	fopen "%configpath" true hfile;
	if (%hfile, -nt, %FIO_INVALID_HANDLE) {
		for (i, 0, %arrConfigItems.length, -inc) {
			if ("%arrConfigItems[%i]", -nt, "") {
				fwriteline %hfile "%arrConfigItems[%i]";
			};
		};
		
		fclose %hfile;
	};

	print "Saved chat messages to: %configpath";
};

function btnExitScript_OnClick void()
{
    wnd_freeform frmMain;
};

function LoadMessages void()
{
    local filecontent string;
    local chatcfgexists bool;
	local cntnumber int;

	fexists "%configpath" chatcfgexists;
	if (%chatcfgexists, -eq, false) {
		sys {echo -= Go0d Luck ^& Have Fun =->>"%configpath"};
		sys {echo -= ! G0od Game ! =->>"%configpath"};
		sys {echo -= NiCe jOb =->>"%configpath"};
		sys {echo -= Let us rush the core =->>"%configpath"};
		sys {echo -= Please add more switching messages =->>"%configpath"};
	};

    sys {type "%configpath"} filecontent;

    s_tokenize "%filecontent" "%CR%LF" splittedmsgs;
    
    array_item_insert arrConfigItems 0 "%splittedmsgs[0]";
    array_item_insert arrConfigItems 1 "%splittedmsgs[1]";
    array_item_insert arrConfigItems 2 "%splittedmsgs[2]";
    array_item_insert arrConfigItems 3 "%splittedmsgs[3]";
	
	if (%splittedmsgs.count, -gre, %CONFIG_TOGGLE_SECTION_START) {
		for (i, %CONFIG_TOGGLE_SECTION_START, %splittedmsgs.count, -inc) {
			array_item_insert arrConfigItems %i "%splittedmsgs[%i]";
		};
	};

	set cntnumber <= %splittedmsgs.count;
	-= cntnumber 4;

	set switchmsg <= "(You have %cntnumber switching items)";
};

function CreateWindow void()
{
	local wndstyles int;
	local cbselindex int;
	
	bitop "or" (%WS_OVERLAPPED, %WS_SYSMENU, %WS_VISIBLE) wndstyles;

    wnd_spawnform frmMain "%FORM_TEXT" 500 400 635 330 %wndstyles bres;
	wnd_setformicon frmMain {%currentpath..\assets\app.ico};

    wnd_spawnlabel frmMain "lblKey1" 20 10 20 30 "F5: ";
	wnd_spawnlabel frmMain "lblKey2" 20 50 20 30 "F6: ";
	wnd_spawnlabel frmMain "lblKey3" 20 90 20 30 "F7: ";
	wnd_spawnlabel frmMain "lblKey4" 20 130 20 30 "F8: ";
	wnd_spawnlabel frmMain "lblKey5" 20 170 20 30 "F9: ";
	
    wnd_spawntextbox frmMain "txtMsg1" 50 10 550 20 "";
    wnd_spawntextbox frmMain "txtMsg2" 50 50 550 20 "";
    wnd_spawntextbox frmMain "txtMsg3" 50 90 550 20 "";
    wnd_spawntextbox frmMain "txtMsg4" 50 130 550 20 "";
	wnd_spawncombobox frmMain "cbHotKeyToggles" 50 170 550 1500;

	wnd_spawnlabel frmMain "lblWndStatus" 20 215 350 30 "";

    wnd_spawnbutton frmMain "btnSaveMessages" 20 255 200 30 "Save";
    wnd_spawnbutton frmMain "btnExitScript" 400 255 200 30 "Exit";

    wnd_settextboxtext frmMain txtMsg1 "%arrConfigItems[0]";
    wnd_settextboxtext frmMain txtMsg2 "%arrConfigItems[1]";
    wnd_settextboxtext frmMain txtMsg3 "%arrConfigItems[2]";
    wnd_settextboxtext frmMain txtMsg4 "%arrConfigItems[3]";
	
	for (cbcnt, %CONFIG_TOGGLE_SECTION_START, %arrConfigItems.length, -inc) {
		wnd_cbadditem frmMain cbHotKeyToggles "%arrConfigItems[%cbcnt]";
	};

	wnd_cbgetcount frmMain cbHotKeyToggles cbselindex;

	wnd_cbadditem frmMain cbHotKeyToggles "%switchmsg";
	wnd_cbselectitem frmMain cbHotKeyToggles %cbselindex;
};

exec "%currentpathutils.dnys";
exec "%currentpathkeys.dnys";

function UpdateGameWindowStatus void()
{
	local iswndactive bool;
	local wndstatusmsg string;

	call GameWindowActive() => iswndactive;
	if (%iswndactive, -eq, true) {
		if (%lasttimeactive, -eq, false) {
			set wndstatusmsg <= "window found in foreground!";

			wnd_setcomptext "frmMain" "CLabel" "lblWndStatus" "Game Status: %wndstatusmsg";
			print "Game Status: %wndstatusmsg";

			set lasttimeactive <= true;
		};
	} else {
		if (%lasttimeactive, -eq, true) {
			set wndstatusmsg <= "window not in foreground...";

			wnd_setcomptext "frmMain" "CLabel" "lblWndStatus" "Game Status: %wndstatusmsg";
			print "Game Status: %wndstatusmsg";

			set lasttimeactive <= false;
		};
	};
};

call LoadMessages() => void;
call CreateWindow() => void;

print "%FORM_TEXT%CR%LF";

while (%brun, -eq, true) {
	call GameWindowActive() => wndcurrentstatus;
	if (%wndcurrentstatus, -eq, true) {
		call CheckKey1() => void;
		call CheckKey2() => void;
		call CheckKey3() => void;
		call CheckKey4() => void;
		call CheckKey5() => void;
	};

	call UpdateGameWindowStatus() => void;

    wnd_process;
    wnd_isformvalid frmMain brun;

    sleep 1;
};